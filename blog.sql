/*
Navicat MySQL Data Transfer

Source Server         : localhost_3306
Source Server Version : 50137
Source Host           : localhost:3306
Source Database       : blog

Target Server Type    : MYSQL
Target Server Version : 50137
File Encoding         : 65001

Date: 2017-09-03 23:02:14
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for t_article
-- ----------------------------
DROP TABLE IF EXISTS `t_article`;
CREATE TABLE `t_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `content` text NOT NULL,
  `categoryid` int(11) NOT NULL,
  `createtime` datetime DEFAULT NULL,
  `modifytime` datetime DEFAULT NULL,
  `digest` varchar(255) NOT NULL,
  `mark` char(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_article
-- ----------------------------
INSERT INTO `t_article` VALUES ('21', 'log4j日志管理框架使用', '<p>1）、log4j为日志管理框架</p><p>2）、使用方法：</p><p>1、添加jar包：log4j-1.2.17.jar</p><p>2、添加配置文件（放在类路径下）：log4j.properties或log4j.xml</p><p>log4j.properties</p><p>#保存文件的目的地</p><p><span style=\"min-height: 16pt; color: rgb(0, 0, 128);\">log4j.appender.guduke.File</span><span style=\"min-height: 16pt; color: rgb(0, 128, 0);\">=</span><span style=\"min-height: 16pt; color: rgb(128, 0, 0);\">org.apache.log4j.DailyRollingFileAppender</span></p><p><span style=\"min-height: 16pt; color: rgb(0, 0, 128);\">log4j.appender.guduke.File.file</span><span style=\"min-height: 16pt; color: rgb(0, 128, 0);\">=</span><span style=\"min-height: 16pt; color: rgb(128, 0, 0);\">e:\\\\guduke.log</span></p><p><span style=\"color: rgb(0, 0, 128);\">log4j.appender.guduke.File.DatePattern</span><span style=\"color: rgb(0, 128, 0);\">=</span><span style=\"color: rgb(128, 0, 0);\">.yyyy-MM-dd</span></p><p>#日志输出格式</p><p><span style=\"min-height: 16pt; color: rgb(0, 0, 128);\">log4j.appender.guduke.File.layout</span><span style=\"min-height: 16pt; color: rgb(0, 128, 0);\">=</span><span style=\"min-height: 16pt; color: rgb(128, 0, 0);\">org.apache.log4j.PatternLayout</span></p><p><span style=\"color: rgb(0, 0, 128);\">log4j.appender.guduke.File.layout.ConversionPattern</span><span style=\"color: rgb(0, 128, 0);\">=</span><span style=\"color: rgb(128, 0, 0);\">%d{yyyy-MM-dd HH:mm:ss,SSS} %5p (%C:%M) - %m%n</span></p><p>#打印到控制台并定义输出格式</p><p><span style=\"min-height: 16pt; color: rgb(0, 0, 128);\">log4j.appender.guduke.Console</span><span style=\"min-height: 16pt; color: rgb(0, 128, 0);\">=</span><span style=\"min-height: 16pt; color: rgb(128, 0, 0);\">org.apache.log4j.ConsoleAppender</span></p><p><span style=\"min-height: 16pt; color: rgb(0, 0, 128);\">log4j.appender.guduke.Console.layout</span><span style=\"min-height: 16pt; color: rgb(0, 128, 0);\">=</span><span style=\"min-height: 16pt; color: rgb(128, 0, 0);\">org.apache.log4j.PatternLayout&nbsp;&nbsp;&nbsp;</span></p><p><span style=\"color: rgb(0, 0, 128);\">log4j.appender.guduke.Console.layout.ConversionPattern</span><span style=\"color: rgb(0, 128, 0);\">=</span><span style=\"color: rgb(128, 0, 0);\">%d{yyyy-MM-dd HH:mm:ss,SSS} %5p (%C:%M) - %m%n</span></p><p>#定义日志级别、打印到文件及控制台</p><p><span style=\"color: rgb(0, 0, 128);\">log4j.rootLogger</span><span style=\"color: rgb(0, 128, 0);\">=</span><span style=\"color: rgb(128, 0, 0);\">warn,guduke.File,guduke.Console</span></p><p><span style=\"color: rgb(0, 0, 128);\">log4j.logger.com.guduke</span><span style=\"color: rgb(0, 128, 0);\">=</span><span style=\"color: rgb(128, 0, 0);\">warn,guduke.File,guduke.Console</span></p><p>log4j.xml优先于log4j.properties，filter能够精确匹配，可以过滤想要的，additivity=&quot;false&quot;精确匹配停止传播</p><p>&lt;filter class=&quot;org.apache.log4j.varia.LevelRangeFilter&quot;&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &lt;param name=&quot;levelMin&quot; value=&quot;info&quot; /&gt;</p><p>&lt;param name=&quot;levelMax&quot; value=&quot;info&quot; /&gt;</p><p>&lt;param name=&quot;AcceptOnMatch&quot; value=&quot;true&quot; /&gt;</p><p>&lt;/filter&gt;</p><p>&lt;logger name=<span style=\"font-style: italic;\">&quot;com.guduke.dao&quot;</span> <span style=\"color: rgb(227, 0, 0);\">additivity=</span><span style=\"color: rgb(227, 0, 0); font-style: italic;\">&quot;false&quot;</span>&gt;</p><p>&nbsp; &nbsp;&nbsp; &lt;level value=<span style=\"font-style: italic;\">&quot;debug&quot;</span> /&gt;</p><p>&nbsp; &nbsp;&nbsp; &lt;appender-ref ref=<span style=\"font-style: italic;\">&quot;log.console&quot;</span> /&gt;</p><p>&nbsp; &nbsp; &lt;appender-ref ref=<span style=\"font-style: italic;\">&quot;log.file&quot;</span> /&gt;</p><p>&lt;/logger&gt;</p><p>3、在需要打印日志的类中定义常量属性</p><p><span style=\"color: rgb(127, 0, 85); font-weight: bold;\">private</span> <span style=\"color: rgb(127, 0, 85); font-weight: bold;\">static</span> Logger <span style=\"color: rgb(0, 0, 192); font-style: italic;\">logger</span> = Logger.<span style=\"font-style: italic;\">getLogger</span>(UserDao.<span style=\"color: rgb(127, 0, 85); font-weight: bold;\">class</span>);</p><p>调用相应的方法：</p><p><span style=\"color: rgb(0, 0, 192);\">logger</span>.debug(<span style=\"color: rgb(42, 0, 255);\">&quot;--debug&quot;</span>);</p><p><span style=\"color: rgb(0, 0, 192);\">logger</span>.info(<span style=\"color: rgb(42, 0, 255);\">&quot;--info&quot;</span>);</p><p><span style=\"color: rgb(0, 0, 192);\">logger</span>.warn(<span style=\"color: rgb(42, 0, 255);\">&quot;--warn&quot;</span>);</p><p><span style=\"color: rgb(0, 0, 192);\">logger</span>.error(<span style=\"color: rgb(42, 0, 255);\">&quot;--error&quot;</span>);</p><p>常用的四个级别：debug&lt;info&lt;warn&lt;error,若定义info级别则只会输出info及后续高级别的日志（打印自身往后靠）</p><p>3）、eclipse对properties文件中文支持不友好，可安装propedit插件</p><p>添加： <span style=\"color: rgb(51, 51, 51); widows: 1; background-color: rgb(255, 255, 255);\">http://propedit.sourceforge.jp/eclipse/updates/</span></p><p><span style=\"color: rgb(51, 51, 51);\">选择：</span> <span style=\"color: rgb(51, 51, 51); widows: 1; background-color: rgb(255, 255, 255);\">PropertiesEditor</span></p><p>4）、日志输出级别为精确，输出为各自</p>', '4', '2017-08-30 23:25:13', '2017-09-03 16:24:08', '1）、log4j为日志管理框架2）、使用方法：1、添加jar包：log4j-1.2.17.jar2、添加配置文件（放在类路径下）：log4j.properties或log4j.xmllog4j.pro', '1');
INSERT INTO `t_article` VALUES ('22', '第一章 Java概述', '<p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">1）JDK包含JRE，JRE包含JVM，JDK为java开发工具包，JVM并不是物理机器，而是解释执行字节码的程序</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">2）Java注释的三种方式：行注释、块注释（段注释）、javadoc注释（能够生成java帮助文档）</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">3）Java程序开发的过程：编写源文件--&gt;通过javac命令编译成字节码文件--&gt;通过java命令让JVM解释执行字节码文件</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">4）JVM虚拟机运行过程：</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">1、通过类加载器将硬盘上的字节码文件加载到内存</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">2、通过字节码验证器对字节码文件进行验证</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">3、解释器解释执行字节码</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">5）、程序设计错误：编译错误（编译时过程中出现的错误）、运行错误（运行过程中出现中断的错误）、逻辑错误（程序没有按预期的方法执行）</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">6）、Java开发环境变量配置</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">windows系统下的配置：</span></p><table style=\"width: 698px;\"><colgroup><col/><col/></colgroup><tbody><tr class=\"firstRow\"><td style=\"text-align: center;\" valign=\"top\"><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; font-family: Verdana, Arial, Helvetica, sans-serif; line-height: 21px; widows: 1; background-color: rgb(255, 255, 255);\">JAVA_HOME</span></td><td valign=\"top\"><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">C:\\Java\\jdk1.8.0_05</span></td></tr><tr><td style=\"text-align: center;\" valign=\"top\"><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; font-family: Verdana, Arial, Helvetica, sans-serif; line-height: 21px; widows: 1; background-color: rgb(255, 255, 255);\">Path</span></td><td valign=\"top\"><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; font-family: Verdana, Arial, Helvetica, sans-serif; line-height: 21px; widows: 1;\">;</span><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; font-family: Verdana, Arial, Helvetica, sans-serif; line-height: 21px; widows: 1;\">%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin</span></td></tr><tr><td style=\"text-align: center;\" valign=\"top\"><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; font-family: Verdana, Arial, Helvetica, sans-serif; line-height: 21px; widows: 1; background-color: rgb(255, 255, 255);\">CLASSPATH</span></td><td valign=\"top\"><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; font-family: Verdana, Arial, Helvetica, sans-serif; line-height: 21px; widows: 1; background-color: rgb(255, 255, 255);\">.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar</span></td></tr></tbody></table><p><span style=\"word-wrap: break-word; -webkit-line-break: after-white-space; line-height: 21px;\">linux系统下的配置：</span></p><p><span style=\"word-wrap: break-word; -webkit-line-break: after-white-space; line-height: 21px;\">编辑：vim /etc/profile</span></p><p><span style=\"word-wrap: break-word; -webkit-line-break: after-white-space; line-height: 21px;\">最后加入：</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">JAVA_HOME=/opt/jdk1.8.0_51</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">PATH=/opt/jdk1.8.0_51/bin:$PATH</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">CLASSPATH=.:/opt/jdk1.8.0_51/bin/dt.jar:/opt/jdk1.8.0_51/bin/tools.jar</span></p><p><span style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;\">export JAVA_HOME PATH CLASSPATH</span></p><p><span style=\"word-wrap: break-word; -webkit-line-break: after-white-space;\">7）、一个源文件可以有多个类，但声明为公共的类，类名与源文件名必须一致</span></p><p><span style=\"word-wrap: break-word; -webkit-line-break: after-white-space;\">8）、main方法是程序开始执行的入口</span></p><p><span style=\"word-wrap: break-word; -webkit-line-break: after-white-space;\">9）、Java跨平台运行的原因：</span></p><p><span style=\"word-wrap: break-word; -webkit-line-break: after-white-space;\">1、与平台无关的字节码文件</span></p><p><span style=\"word-wrap: break-word; -webkit-line-break: after-white-space;\">2、字节码可以通过硬件平台对应的JVM翻译成硬件平台能够执行的机器码</span></p><p><span style=\"word-wrap: break-word; -webkit-line-break: after-white-space;\">3、不同平台基本类型的长度一致</span></p>', '4', '2017-08-30 23:26:54', '2017-09-02 21:51:05', '1）JDK包含JRE，JRE包含JVM，JDK为java开发工具包，JVM并不是物理机器，而是解释执行字节码的程序2）Java注释的三种方式：行注释、块注释（段注释）、javadoc注释（能够生成ja', '1');
INSERT INTO `t_article` VALUES ('36', '《诛仙》读后感', '<p style=\"text-align: center;\"><span style=\"margin: 0px; padding: 0px; font-family: 宋体; font-size: 18px; color: rgb(0, 0, 0);\">曾深藏的秘密，坚守的信念，在那一刻瞬间崩塌。<br/></span></p><p style=\"text-align: center;\"><span style=\"margin: 0px; padding: 0px; font-family: 宋体; font-size: 18px; color: rgb(0, 0, 0);\">所爱之人为其付出，她的离去，令其万念俱灰，不能自拔。</span></p><p style=\"text-align: center;\"><span style=\"margin: 0px; padding: 0px; font-family: 宋体; font-size: 18px; color: rgb(0, 0, 0);\">愧疚及信念的崩溃，让其迷失自我，一次次徘徊在绝望的边缘。</span></p><p style=\"text-align: center;\"><span style=\"margin: 0px; padding: 0px; font-family: 宋体; font-size: 18px; color: rgb(0, 0, 0);\">当希望不可能再有，她的最终离去，让其生无可恋。</span></p><p style=\"text-align: center;\"><span style=\"margin: 0px; padding: 0px; font-family: 宋体; font-size: 18px; color: rgb(0, 0, 0);\">陪伴及痛心责骂，让其开始觉醒，过去的终将会过去，重要的是珍惜当下。</span></p><p style=\"text-align: center;\"><span style=\"margin: 0px; padding: 0px; font-family: 宋体; font-size: 18px; color: rgb(0, 0, 0);\">经历千难百劫、挫折失败，需保持一颗千锤百炼的心，这也是她希望看到的。</span></p><p><br/></p>', '3', '2017-09-03 16:15:22', '2017-09-03 16:15:22', '曾深藏的秘密，坚守的信念，在那一刻瞬间崩塌。所爱之人为其付出，她的离去，令其万念俱灰，不能自拔。愧疚及信念的崩溃，让其迷失自我，一次次徘徊在绝望的边缘。当希望不可能再有，她的最终离去，让其生无可恋。陪', '1');
INSERT INTO `t_article` VALUES ('37', '经典语句', '<p>\n    <span style=\"color: rgb(0, 0, 0);\"><span style=\"margin: 0px; padding: 0px; font-family: Tahoma; font-size: 18px;\">1、生活中围绕我们的人这么多，到最后，我们还是孤独一人。</span><span style=\"font-size: 18px; font-family: Tahoma; margin: 0px; padding: 0px;\"><br/>2、晚霞过后还能看到星星，朝霞过后只有光天化日的现实。<br/>3、大部分人的爱情对象也只是存在于自己的想象之中。他们所爱的并不是现实中的她，而只是想象中的她，现实中的她只是他们创造梦中情人的一个模板，他们迟早会发现梦中情人与模板之间的差异，如果适应这种差异他们就会走到一起，无法适应就得分开，就这么简单。<br/>4、</span><span style=\"margin: 0px; padding: 0px; font-family: Tahoma; font-size: 18px;\">一个男人最起码要会保护四样东西,脚下的土地,家里的父母,怀里的女人,身边的兄弟&nbsp;</span></span>\n</p>\n<p>\n    <span style=\"color: rgb(0, 0, 0);\"><span style=\"white-space: pre-wrap; font-family: Tahoma; font-size: 18px; color: rgb(0, 0, 0); margin: 0px; padding: 0px;\">5、人的一生就像一辆车，从起点开往终点。沿路有人上来有人下去，有的结伴而行，有的挥手告别。有的人也许只是你顺风车上的一个旅客，却会在不经意间改变你的一生！<br/>6、</span><span style=\"margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Tahoma; font-size: 18px;\">告别的时候一定要用力一点，多说一句，说不定就成了最后一句;多看一眼，弄不好就是最后一眼。</span><span style=\"color: rgb(0, 0, 0); margin: 0px; padding: 0px; white-space: pre-wrap; font-family: Tahoma; font-size: 18px;\">&nbsp;<br/><span style=\"color: rgb(0, 0, 0); margin: 0px; padding: 0px;\">7、生人可以变成熟人，但是熟人如果变成生人，会比生人更生分&nbsp;</span></span></span>\n</p>', '3', '2017-09-03 16:20:24', '2017-09-03 16:21:21', '1、生活中围绕我们的人这么多，到最后，我们还是孤独一人。2、晚霞过后还能看到星星，朝霞过后只有光天化日的现实。3、大部分人的爱情对象也只是存在于自己的想象之中。他们所爱的并不是现实中的她，而只是想象中', '1');
INSERT INTO `t_article` VALUES ('38', 'MD5生成工具类', '<p><br/></p><pre class=\"brush:java;toolbar:false\">对密码进行MD5加密，生成32位字符串，源码：\npackage&nbsp;com.guduke.blog.util;\n\nimport&nbsp;java.security.MessageDigest;\n\npublic&nbsp;class&nbsp;MD5Util&nbsp;{\n	public&nbsp;static&nbsp;String&nbsp;digest16(String&nbsp;inStr)&nbsp;{\n		return&nbsp;digest(inStr,&nbsp;16);\n	}\n\n	public&nbsp;static&nbsp;String&nbsp;digest(String&nbsp;inStr)&nbsp;{\n		return&nbsp;digest(inStr,&nbsp;32);\n	}\n\n	private&nbsp;static&nbsp;String&nbsp;digest(String&nbsp;inStr,&nbsp;int&nbsp;rang)&nbsp;{\n		MessageDigest&nbsp;md5&nbsp;=&nbsp;null;\n		if&nbsp;(inStr&nbsp;==&nbsp;null&nbsp;||&nbsp;&quot;&quot;.equals(inStr))&nbsp;{\n			return&nbsp;&quot;&quot;;\n		}\n\n		try&nbsp;{\n			md5&nbsp;=&nbsp;MessageDigest.getInstance(&quot;MD5&quot;);\n		}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\n			e.printStackTrace();\n			return&nbsp;&quot;&quot;;\n		}\n\n		char[]&nbsp;charArray&nbsp;=&nbsp;inStr.toCharArray();\n		byte[]&nbsp;byteArray&nbsp;=&nbsp;new&nbsp;byte[charArray.length];\n\n		for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;charArray.length;&nbsp;i++)&nbsp;{\n			byteArray[i]&nbsp;=&nbsp;(byte)&nbsp;charArray[i];\n		}\n\n		byte[]&nbsp;md5Bytes&nbsp;=&nbsp;md5.digest(byteArray);\n\n		StringBuilder&nbsp;hexValue&nbsp;=&nbsp;new&nbsp;StringBuilder();\n\n		for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;md5Bytes.length;&nbsp;i++)&nbsp;{\n			int&nbsp;val&nbsp;=&nbsp;((int)&nbsp;md5Bytes[i])&nbsp;&amp;&nbsp;0xff;\n			if&nbsp;(val&nbsp;&lt;&nbsp;16)\n				hexValue.append(&quot;0&quot;);\n			hexValue.append(Integer.toHexString(val));\n		}\n		if&nbsp;(rang&nbsp;==&nbsp;32)&nbsp;{\n			return&nbsp;hexValue.toString();\n		}&nbsp;else&nbsp;{\n			return&nbsp;hexValue.toString().substring(8,&nbsp;24);\n		}\n	}\n\n	public&nbsp;static&nbsp;void&nbsp;main(String&nbsp;args[])&nbsp;{\n		String&nbsp;s&nbsp;=&nbsp;new&nbsp;String(&quot;admin&quot;);\n		System.out.println(digest(s));\n	}\n}</pre><p><br/></p>', '5', '2017-09-03 16:33:04', '2017-09-03 16:47:17', '对密码进行MD5加密，生成32位字符串，源码：package com.guduke.blog.util;import java.security.MessageDigest;public class ', '1');
INSERT INTO `t_article` VALUES ('39', 'springmvc集成验证码功能', '<p><span style=\"font-size: 18px;\">一、加入生成验证码的工具类</span><br/></p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.guduke.blog.util;\n\nimport&nbsp;java.awt.Color;\nimport&nbsp;java.awt.Font;\nimport&nbsp;java.awt.Graphics;\nimport&nbsp;java.awt.Graphics2D;\nimport&nbsp;java.awt.RenderingHints;\nimport&nbsp;java.awt.geom.AffineTransform;\nimport&nbsp;java.awt.image.BufferedImage;\nimport&nbsp;java.io.File;\nimport&nbsp;java.io.FileOutputStream;\nimport&nbsp;java.io.IOException;\nimport&nbsp;java.io.OutputStream;\nimport&nbsp;java.util.Arrays;\nimport&nbsp;java.util.Random;\n&nbsp;\nimport&nbsp;javax.imageio.ImageIO;\n\npublic&nbsp;class&nbsp;VerifyCodeUtils{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;//使用到Algerian字体，系统里没有的话需要安装字体，字体只显示大写，去掉了1,0,i,o几个容易混淆的字符\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;VERIFY_CODES&nbsp;=&nbsp;&quot;23456789ABCDEFGHJKLMNPQRSTUVWXYZ&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;Random&nbsp;random&nbsp;=&nbsp;new&nbsp;Random();\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;/**\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;使用系统默认字符源生成验证码\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;verifySize&nbsp;&nbsp;&nbsp;&nbsp;验证码长度\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;generateVerifyCode(int&nbsp;verifySize){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;generateVerifyCode(verifySize,&nbsp;VERIFY_CODES);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;/**\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;使用指定源生成验证码\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;verifySize&nbsp;&nbsp;&nbsp;&nbsp;验证码长度\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;sources&nbsp;&nbsp;&nbsp;验证码字符源\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;generateVerifyCode(int&nbsp;verifySize,&nbsp;String&nbsp;sources){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(sources&nbsp;==&nbsp;null&nbsp;||&nbsp;sources.length()&nbsp;==&nbsp;0){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sources&nbsp;=&nbsp;VERIFY_CODES;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;codesLen&nbsp;=&nbsp;sources.length();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Random&nbsp;rand&nbsp;=&nbsp;new&nbsp;Random(System.currentTimeMillis());\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringBuilder&nbsp;verifyCode&nbsp;=&nbsp;new&nbsp;StringBuilder(verifySize);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;verifySize;&nbsp;i++){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verifyCode.append(sources.charAt(rand.nextInt(codesLen-1)));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;verifyCode.toString();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;/**\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;生成随机验证码文件,并返回验证码值\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;w\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;h\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;outputFile\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;verifySize\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;IOException\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;outputVerifyImage(int&nbsp;w,&nbsp;int&nbsp;h,&nbsp;File&nbsp;outputFile,&nbsp;int&nbsp;verifySize)&nbsp;throws&nbsp;IOException{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;verifyCode&nbsp;=&nbsp;generateVerifyCode(verifySize);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outputImage(w,&nbsp;h,&nbsp;outputFile,&nbsp;verifyCode);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;verifyCode;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;/**\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;输出随机验证码图片流,并返回验证码值\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;w\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;h\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;os\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;verifySize\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;IOException\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;outputVerifyImage(int&nbsp;w,&nbsp;int&nbsp;h,&nbsp;OutputStream&nbsp;os,&nbsp;int&nbsp;verifySize)&nbsp;throws&nbsp;IOException{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;verifyCode&nbsp;=&nbsp;generateVerifyCode(verifySize);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outputImage(w,&nbsp;h,&nbsp;os,&nbsp;verifyCode);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;verifyCode;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;/**\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;生成指定验证码图像文件\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;w\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;h\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;outputFile\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;code\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;IOException\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;outputImage(int&nbsp;w,&nbsp;int&nbsp;h,&nbsp;File&nbsp;outputFile,&nbsp;String&nbsp;code)&nbsp;throws&nbsp;IOException{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(outputFile&nbsp;==&nbsp;null){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;dir&nbsp;=&nbsp;outputFile.getParentFile();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!dir.exists()){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dir.mkdirs();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outputFile.createNewFile();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileOutputStream&nbsp;fos&nbsp;=&nbsp;new&nbsp;FileOutputStream(outputFile);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outputImage(w,&nbsp;h,&nbsp;fos,&nbsp;code);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fos.close();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch(IOException&nbsp;e){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;e;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;/**\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;输出指定验证码图片流\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;w\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;h\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;os\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;code\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;IOException\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;outputImage(int&nbsp;w,&nbsp;int&nbsp;h,&nbsp;OutputStream&nbsp;os,&nbsp;String&nbsp;code)&nbsp;throws&nbsp;IOException{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;verifySize&nbsp;=&nbsp;code.length();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BufferedImage&nbsp;image&nbsp;=&nbsp;new&nbsp;BufferedImage(w,&nbsp;h,&nbsp;BufferedImage.TYPE_INT_RGB);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Random&nbsp;rand&nbsp;=&nbsp;new&nbsp;Random();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Graphics2D&nbsp;g2&nbsp;=&nbsp;image.createGraphics();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color[]&nbsp;colors&nbsp;=&nbsp;new&nbsp;Color[5];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color[]&nbsp;colorSpaces&nbsp;=&nbsp;new&nbsp;Color[]&nbsp;{&nbsp;Color.WHITE,&nbsp;Color.CYAN,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color.GRAY,&nbsp;Color.LIGHT_GRAY,&nbsp;Color.MAGENTA,&nbsp;Color.ORANGE,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color.PINK,&nbsp;Color.YELLOW&nbsp;};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float[]&nbsp;fractions&nbsp;=&nbsp;new&nbsp;float[colors.length];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;colors.length;&nbsp;i++){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colors[i]&nbsp;=&nbsp;colorSpaces[rand.nextInt(colorSpaces.length)];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fractions[i]&nbsp;=&nbsp;rand.nextFloat();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Arrays.sort(fractions);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.setColor(Color.GRAY);//&nbsp;设置边框色\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.fillRect(0,&nbsp;0,&nbsp;w,&nbsp;h);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color&nbsp;c&nbsp;=&nbsp;getRandColor(200,&nbsp;250);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.setColor(c);//&nbsp;设置背景色\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.fillRect(0,&nbsp;2,&nbsp;w,&nbsp;h-4);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//绘制干扰线\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Random&nbsp;random&nbsp;=&nbsp;new&nbsp;Random();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.setColor(getRandColor(160,&nbsp;200));//&nbsp;设置线条的颜色\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;20;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x&nbsp;=&nbsp;random.nextInt(w&nbsp;-&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;y&nbsp;=&nbsp;random.nextInt(h&nbsp;-&nbsp;1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;xl&nbsp;=&nbsp;random.nextInt(6)&nbsp;+&nbsp;1;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;yl&nbsp;=&nbsp;random.nextInt(12)&nbsp;+&nbsp;1;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.drawLine(x,&nbsp;y,&nbsp;x&nbsp;+&nbsp;xl&nbsp;+&nbsp;40,&nbsp;y&nbsp;+&nbsp;yl&nbsp;+&nbsp;20);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;添加噪点\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float&nbsp;yawpRate&nbsp;=&nbsp;0.05f;//&nbsp;噪声率\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;area&nbsp;=&nbsp;(int)&nbsp;(yawpRate&nbsp;*&nbsp;w&nbsp;*&nbsp;h);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;area;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x&nbsp;=&nbsp;random.nextInt(w);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;y&nbsp;=&nbsp;random.nextInt(h);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;rgb&nbsp;=&nbsp;getRandomIntColor();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image.setRGB(x,&nbsp;y,&nbsp;rgb);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shear(g2,&nbsp;w,&nbsp;h,&nbsp;c);//&nbsp;使图片扭曲\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.setColor(getRandColor(100,&nbsp;160));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;fontSize&nbsp;=&nbsp;h-4;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Font&nbsp;font&nbsp;=&nbsp;new&nbsp;Font(&quot;Algerian&quot;,&nbsp;Font.ITALIC,&nbsp;fontSize);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.setFont(font);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char[]&nbsp;chars&nbsp;=&nbsp;code.toCharArray();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;verifySize;&nbsp;i++){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AffineTransform&nbsp;affine&nbsp;=&nbsp;new&nbsp;AffineTransform();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;affine.setToRotation(Math.PI&nbsp;/&nbsp;4&nbsp;*&nbsp;rand.nextDouble()&nbsp;*&nbsp;(rand.nextBoolean()&nbsp;?&nbsp;1&nbsp;:&nbsp;-1),&nbsp;(w&nbsp;/&nbsp;verifySize)&nbsp;*&nbsp;i&nbsp;+&nbsp;fontSize/2,&nbsp;h/2);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.setTransform(affine);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.drawChars(chars,&nbsp;i,&nbsp;1,&nbsp;((w-10)&nbsp;/&nbsp;verifySize)&nbsp;*&nbsp;i&nbsp;+&nbsp;5,&nbsp;h/2&nbsp;+&nbsp;fontSize/2&nbsp;-&nbsp;10);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g2.dispose();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageIO.write(image,&nbsp;&quot;jpg&quot;,&nbsp;os);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;Color&nbsp;getRandColor(int&nbsp;fc,&nbsp;int&nbsp;bc)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(fc&nbsp;&gt;&nbsp;255)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fc&nbsp;=&nbsp;255;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(bc&nbsp;&gt;&nbsp;255)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bc&nbsp;=&nbsp;255;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;r&nbsp;=&nbsp;fc&nbsp;+&nbsp;random.nextInt(bc&nbsp;-&nbsp;fc);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;g&nbsp;=&nbsp;fc&nbsp;+&nbsp;random.nextInt(bc&nbsp;-&nbsp;fc);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;b&nbsp;=&nbsp;fc&nbsp;+&nbsp;random.nextInt(bc&nbsp;-&nbsp;fc);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Color(r,&nbsp;g,&nbsp;b);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;int&nbsp;getRandomIntColor()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int[]&nbsp;rgb&nbsp;=&nbsp;getRandomRgb();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;color&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;c&nbsp;:&nbsp;rgb)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;=&nbsp;color&nbsp;&lt;&lt;&nbsp;8;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;=&nbsp;color&nbsp;|&nbsp;c;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;color;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;int[]&nbsp;getRandomRgb()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int[]&nbsp;rgb&nbsp;=&nbsp;new&nbsp;int[3];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;3;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rgb[i]&nbsp;=&nbsp;random.nextInt(255);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;rgb;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;void&nbsp;shear(Graphics&nbsp;g,&nbsp;int&nbsp;w1,&nbsp;int&nbsp;h1,&nbsp;Color&nbsp;color)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shearX(g,&nbsp;w1,&nbsp;h1,&nbsp;color);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shearY(g,&nbsp;w1,&nbsp;h1,&nbsp;color);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;void&nbsp;shearX(Graphics&nbsp;g,&nbsp;int&nbsp;w1,&nbsp;int&nbsp;h1,&nbsp;Color&nbsp;color)&nbsp;{\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;period&nbsp;=&nbsp;random.nextInt(2);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boolean&nbsp;borderGap&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;frames&nbsp;=&nbsp;1;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;phase&nbsp;=&nbsp;random.nextInt(2);\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;h1;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;d&nbsp;=&nbsp;(double)&nbsp;(period&nbsp;&gt;&gt;&nbsp;1)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Math.sin((double)&nbsp;i&nbsp;/&nbsp;(double)&nbsp;period\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;(6.2831853071795862D&nbsp;*&nbsp;(double)&nbsp;phase)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;(double)&nbsp;frames);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.copyArea(0,&nbsp;i,&nbsp;w1,&nbsp;1,&nbsp;(int)&nbsp;d,&nbsp;0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(borderGap)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.setColor(color);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.drawLine((int)&nbsp;d,&nbsp;i,&nbsp;0,&nbsp;i);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.drawLine((int)&nbsp;d&nbsp;+&nbsp;w1,&nbsp;i,&nbsp;w1,&nbsp;i);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;void&nbsp;shearY(Graphics&nbsp;g,&nbsp;int&nbsp;w1,&nbsp;int&nbsp;h1,&nbsp;Color&nbsp;color)&nbsp;{\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;period&nbsp;=&nbsp;random.nextInt(40)&nbsp;+&nbsp;10;&nbsp;//&nbsp;50;\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boolean&nbsp;borderGap&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;frames&nbsp;=&nbsp;20;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;phase&nbsp;=&nbsp;7;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;w1;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;d&nbsp;=&nbsp;(double)&nbsp;(period&nbsp;&gt;&gt;&nbsp;1)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Math.sin((double)&nbsp;i&nbsp;/&nbsp;(double)&nbsp;period\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;(6.2831853071795862D&nbsp;*&nbsp;(double)&nbsp;phase)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;(double)&nbsp;frames);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.copyArea(i,&nbsp;0,&nbsp;1,&nbsp;h1,&nbsp;0,&nbsp;(int)&nbsp;d);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(borderGap)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.setColor(color);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.drawLine(i,&nbsp;(int)&nbsp;d,&nbsp;i,&nbsp;0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.drawLine(i,&nbsp;(int)&nbsp;d&nbsp;+&nbsp;h1,&nbsp;i,&nbsp;h1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}</pre><p><span style=\"font-size: 18px;\">二、在controllor里面加入</span></p><pre class=\"brush:java;toolbar:false\">	@RequestMapping(&quot;/authImage&quot;)\n	public&nbsp;void&nbsp;authImage(HttpServletRequest&nbsp;request,HttpServletResponse&nbsp;response){\n		response.setHeader(&quot;Pragma&quot;,&nbsp;&quot;No-cache&quot;);&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.setHeader(&quot;Cache-Control&quot;,&nbsp;&quot;no-cache&quot;);&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.setDateHeader(&quot;Expires&quot;,&nbsp;0);&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.setContentType(&quot;image/jpeg&quot;);&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//生成随机字串&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;verifyCode&nbsp;=&nbsp;VerifyCodeUtils.generateVerifyCode(4);&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//存入会话session&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HttpSession&nbsp;session&nbsp;=&nbsp;request.getSession(true);&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//删除以前的\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session.removeAttribute(&quot;verCode&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session.setAttribute(&quot;verCode&quot;,&nbsp;verifyCode.toLowerCase());&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//生成图片&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;w&nbsp;=&nbsp;110,&nbsp;h&nbsp;=&nbsp;40;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\n	&nbsp;&nbsp;&nbsp;&nbsp;VerifyCodeUtils.outputImage(w,&nbsp;h,&nbsp;response.getOutputStream(),&nbsp;verifyCode);\n	}&nbsp;catch&nbsp;(IOException&nbsp;e)&nbsp;{\n	&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\n	}\n	}</pre><p><span style=\"font-size: 18px;\">三、在jsp页面加入以下代码</span></p><pre class=\"brush:html;toolbar:false\">验证码输入框：\n&lt;input&nbsp;type=&quot;text&quot;&nbsp;name=&quot;verCode&quot;&nbsp;placeholder=&quot;请输入验证码&quot;&nbsp;style=&quot;margin-top:10px;&quot;&gt;\n\n页面显示验证码\n&lt;a&nbsp;href=&quot;javascript:;&quot;&nbsp;onclick=&quot;javascript:changeImg()&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;img&nbsp;id=&quot;img&quot;&nbsp;src=&quot;${pageContext.request.contextPath}/authImage.do&quot;&nbsp;/&gt;\n&lt;/a&gt;\n\n点击验证码更换验证码\nfunction&nbsp;changeImg(){\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;img&nbsp;=&nbsp;document.getElementById(&quot;img&quot;);&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;img.src&nbsp;=&nbsp;&quot;${pageContext.request.contextPath}/user/authImage.do?date=&quot;&nbsp;+&nbsp;new&nbsp;Date();\n}</pre><p><span style=\"font-size: 18px;\"></span><br/></p>', '5', '2017-09-03 16:51:21', '2017-09-03 17:03:09', '一、加入生成验证码的工具类package com.guduke.blog.util;import java.awt.Color;import java.awt.Font;import java.awt', '1');

-- ----------------------------
-- Table structure for t_category
-- ----------------------------
DROP TABLE IF EXISTS `t_category`;
CREATE TABLE `t_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_category
-- ----------------------------
INSERT INTO `t_category` VALUES ('3', '个人日记');
INSERT INTO `t_category` VALUES ('4', '学习笔记');
INSERT INTO `t_category` VALUES ('5', '技术文章');

-- ----------------------------
-- Table structure for t_menu
-- ----------------------------
DROP TABLE IF EXISTS `t_menu`;
CREATE TABLE `t_menu` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `url` varchar(255) DEFAULT NULL,
  `pid` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_menu
-- ----------------------------
INSERT INTO `t_menu` VALUES ('1', '首页', 'main.htm', '0');
INSERT INTO `t_menu` VALUES ('2', '我的文章', '', '0');
INSERT INTO `t_menu` VALUES ('3', '文章管理', 'article/list.htm', '2');
INSERT INTO `t_menu` VALUES ('4', '分类管理', 'category/list.htm', '2');
INSERT INTO `t_menu` VALUES ('8', '碎言碎语', 'word/list.htm', '2');
INSERT INTO `t_menu` VALUES ('12', '关于我', '', '0');
INSERT INTO `t_menu` VALUES ('13', '个人简介', 'user/introduceList.htm', '12');
INSERT INTO `t_menu` VALUES ('14', '个人资料', 'user/info.htm', '12');

-- ----------------------------
-- Table structure for t_user
-- ----------------------------
DROP TABLE IF EXISTS `t_user`;
CREATE TABLE `t_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `loginacct` varchar(255) NOT NULL,
  `password` char(32) NOT NULL,
  `username` varchar(255) DEFAULT NULL,
  `realname` varchar(255) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `introduce` text,
  `qq` varchar(255) DEFAULT NULL,
  `motto` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_user
-- ----------------------------
INSERT INTO `t_user` VALUES ('1', 'admin', 'e10adc3949ba59abbe56e057f20f883e', '孤独客', '管理员', '1287286145@qq.com', '<p><span style=\"font-size: 18px; color: rgb(0, 0, 0);\">有些事情看似偶然，其实是必然。</span></p><p><span style=\"font-size: 18px; color: rgb(0, 0, 0);\">最开始并没想搞编程，源于对安卓ROM的热爱才开始了解JAVA。当初想着学点JAVA知识能搞个高级设置软件集成到自己的ROM中，然而到目前都没有实现。两年前因为一件事情放弃了做安卓ROM，<span style=\"font-size: 18px;\">到现在为止再没接触过，当初为了兴趣花费了大量时间，如今提不起任何兴趣，之前看起来很重要的事情，现在看来没有什么事情是放不下的。</span></span></p><p><span style=\"font-size: 18px; color: rgb(0, 0, 0);\"><span style=\"font-size: 18px;\">学JAVA是个漫长的过程，中途看得断断续续，一直没有恒心坚持下去。真正静下心学JAVA源于今年5月份，每天像打了鸡血一样。自学的弊端：一是看视频比较杂，视频不连贯，学习不系统;二是没有人指导，只能百度或与源码比对，有的时候解决一个BUG快弄奔溃。能熬几个月静下心学习，我自己都始料未及，现在看来坚持并没有想像的那么难。</span></span></p>', '1287286145', '你的孤独，虽败犹容');

-- ----------------------------
-- Table structure for t_word
-- ----------------------------
DROP TABLE IF EXISTS `t_word`;
CREATE TABLE `t_word` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` text NOT NULL,
  `createtime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_word
-- ----------------------------
INSERT INTO `t_word` VALUES ('7', '你的孤独，虽败犹荣。', '2017-08-31 23:15:50');
INSERT INTO `t_word` VALUES ('8', '记住该记住的，忘记该忘记的，改变可改变的，接受不可改变的。', '2017-08-31 23:17:19');
INSERT INTO `t_word` VALUES ('9', '控制呼吸，把握节奏，用脚本去丈量路，每一公里的坚持都将让你到达更远的地方。', '2017-08-31 23:19:49');
INSERT INTO `t_word` VALUES ('10', '人生总是会从“我就是傻缺”，慢慢变成“呵呵，我是一个傻缺”，然后变成“没事，我们都是傻缺”。', '2017-08-31 23:21:33');
INSERT INTO `t_word` VALUES ('11', '为自己撑起一片天，让心灵栖息。', '2017-08-31 23:22:21');
INSERT INTO `t_word` VALUES ('12', '外表孤傲，内心如火，认真是你对生活最诚挚的态度。', '2017-08-31 23:23:20');
INSERT INTO `t_word` VALUES ('13', '当梦被惊醒，才发觉只是南柯一梦。', '2017-08-31 23:24:14');
INSERT INTO `t_word` VALUES ('14', '做一道微光，桀骜于未知和迷茫。', '2017-08-31 23:24:57');
INSERT INTO `t_word` VALUES ('15', '生活中从来不缺乏美，只是缺乏发现美的眼睛。', '2017-08-31 23:25:32');
INSERT INTO `t_word` VALUES ('16', '唯一不变的是放手奔跑。', '2017-08-31 23:26:18');
INSERT INTO `t_word` VALUES ('17', '有些事情看似偶然，其实是必然', '2017-09-03 12:41:03');
